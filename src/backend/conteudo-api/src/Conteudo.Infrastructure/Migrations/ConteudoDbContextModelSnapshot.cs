// <auto-generated />
using System;
using Conteudo.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Conteudo.Infrastructure.Migrations
{
    [DbContext(typeof(ConteudoDbContext))]
    partial class ConteudoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Conteudo.Domain.Entities.Aula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuracaoMinutos")
                        .HasColumnType("int");

                    b.Property<bool>("IsObrigatoria")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublicada")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TipoAula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("IsPublicada");

                    b.HasIndex("TipoAula");

                    b.HasIndex("CursoId", "Numero")
                        .IsUnique();

                    b.ToTable("Aulas", (string)null);
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconeUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsAtiva")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsAtiva");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.HasIndex("Ordem");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DuracaoHoras")
                        .HasColumnType("int");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Instrutor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("VagasMaximas")
                        .HasColumnType("int");

                    b.Property<int>("VagasOcupadas")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidoAte")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Ativo");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.HasIndex("ValidoAte");

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AulaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extensao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsObrigatorio")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<long>("TamanhoBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoMaterial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("IsAtivo");

                    b.HasIndex("Ordem");

                    b.HasIndex("TipoMaterial");

                    b.HasIndex("AulaId", "Nome")
                        .IsUnique();

                    b.ToTable("Materiais", (string)null);
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Aula", b =>
                {
                    b.HasOne("Conteudo.Domain.Entities.Curso", "Curso")
                        .WithMany("Aulas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Curso", b =>
                {
                    b.HasOne("Conteudo.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Cursos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.OwnsOne("Conteudo.Domain.ValueObjects.ConteudoProgramatico", "ConteudoProgramatico", b1 =>
                        {
                            b1.Property<Guid>("CursoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Avaliacao")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ConteudoProgramatico_Avaliacao");

                            b1.Property<string>("Bibliografia")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ConteudoProgramatico_Bibliografia");

                            b1.Property<string>("Descricao")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ConteudoProgramatico_Descricao");

                            b1.Property<string>("Metodologia")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ConteudoProgramatico_Metodologia");

                            b1.Property<string>("Objetivos")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ConteudoProgramatico_Objetivos");

                            b1.Property<string>("PreRequisitos")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ConteudoProgramatico_PreRequisitos");

                            b1.Property<string>("PublicoAlvo")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ConteudoProgramatico_PublicoAlvo");

                            b1.Property<string>("Recursos")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ConteudoProgramatico_Recursos");

                            b1.Property<string>("Resumo")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ConteudoProgramatico_Resumo");

                            b1.HasKey("CursoId");

                            b1.ToTable("Cursos");

                            b1.WithOwner()
                                .HasForeignKey("CursoId");
                        });

                    b.Navigation("Categoria");

                    b.Navigation("ConteudoProgramatico")
                        .IsRequired();
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Material", b =>
                {
                    b.HasOne("Conteudo.Domain.Entities.Aula", "Aula")
                        .WithMany("Materiais")
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Aula", b =>
                {
                    b.Navigation("Materiais");
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Curso", b =>
                {
                    b.Navigation("Aulas");
                });
#pragma warning restore 612, 618
        }
    }
}
